{
  "contractName": "ChildERC721Mintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_parent",
          "type": "address"
        }
      ],
      "name": "setParent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sig",
          "type": "bytes"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes32"
        },
        {
          "name": "expiration",
          "type": "uint256"
        },
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferWithSig",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "ecrecovery",
      "outputs": [
        {
          "name": "result",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EIP712_TOKEN_TRANSFER_ORDER_SCHEMA_HASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "disabledHashes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "tokenIdOrAmount",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes32"
        },
        {
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "getTokenTransferOrderHash",
      "outputs": [
        {
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EIP712_DOMAIN_HASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EIP712_DOMAIN_SCHEMA_HASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rootToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "LogTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_parent\",\"type\":\"address\"}],\"name\":\"setParent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sig\",\"type\":\"bytes\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes32\"},{\"name\":\"expiration\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferWithSig\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"ecrecovery\",\"outputs\":[{\"name\":\"result\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_TOKEN_TRANSFER_ORDER_SCHEMA_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"disabledHashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokenIdOrAmount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes32\"},{\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"getTokenTransferOrderHash\",\"outputs\":[{\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_SCHEMA_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"rootToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"LogTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"deposit(address,uint256)\":{\"params\":{\"tokenId\":\"tokenId to mint to user's account\",\"user\":\"address for deposit\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Overriding the inherited method so that it emits LogTransfer\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"withdraw(uint256)\":{\"params\":{\"tokenId\":\"tokenId of the token to be withdrawn\"}}}},\"userdoc\":{\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"Deposit tokens\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw tokens\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/arpit/projects/contracts/contracts/child/ChildERC721Mintable.sol\":\"ChildERC721Mintable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/arpit/projects/contracts/contracts/child/ChildERC721.sol\":{\"keccak256\":\"0x8513e3f0d8b2a18577ec09c8ed81daaedeceb9a64500700a19e437abec3d5bb0\",\"urls\":[\"bzzr://f3372adb5c7280f44bf78e6ac321e9fffc1f8adcb404e3c8d906035cdf26e1e7\"]},\"/Users/arpit/projects/contracts/contracts/child/ChildERC721Mintable.sol\":{\"keccak256\":\"0x7fa0ac1457ce81a04c23bd6f9f904ccf74a91740b34d7a356294dad26c7fabc0\",\"urls\":[\"bzzr://bf8af1514b1d426192307977687e9123490daa7af29cd4b2304bf24880a2ff21\"]},\"/Users/arpit/projects/contracts/contracts/child/ChildToken.sol\":{\"keccak256\":\"0xe0b08cc0e5c3fafc68c20adaa2b9e53dbd1cbbd889bdcffae320933f75bf4186\",\"urls\":[\"bzzr://bba2fe004a09d226b83f3393c0c7cce1daffa07ad491f65a7b4e3a3431a4b101\"]},\"/Users/arpit/projects/contracts/contracts/child/misc/EIP712.sol\":{\"keccak256\":\"0x0f46a93741471788a7395b72997888385d64d7f6645dab31cb09d3cc688e0ba6\",\"urls\":[\"bzzr://9e50117e62248c05bc826d734feb602c2d7d925b440067528cf52e07f40349cc\"]},\"/Users/arpit/projects/contracts/contracts/child/misc/IParentToken.sol\":{\"keccak256\":\"0x43c4ecc508957b485aac6cf2d037ad3aaca85d2cdd41f0247adda7134c369740\",\"urls\":[\"bzzr://b8c1d63d0d24108205c895c4cb9705e987241c337cc55f4fa554b1f83d064c33\"]},\"/Users/arpit/projects/contracts/contracts/child/misc/LibTokenTransferOrder.sol\":{\"keccak256\":\"0x67f80c672184b6470e0de0ae0b8bc611e2f48beadabb1942cc0030ac91ff9995\",\"urls\":[\"bzzr://4448341b987c08aa9aa3048b32f1552c27c996a55051e18ef290e58abf3a595d\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x317b01d5df6753f57244b354d0a23d5055b293f3fa22693c2ff7906cc988ce97\",\"urls\":[\"bzzr://d3f08352c241a34db9b244c5fb569c7ffb3dcd1a0aa288c855a4a70eddb9e2a3\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd86c61f2e7e78c88716b5591bbf2d6cce8fe1a68320484994810d54f82605a7a\",\"urls\":[\"bzzr://4823f8b1263e0bacc50b5a823ebb27abeda34bffd67fa72225c44ebb2b4a30c7\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x07029cbf047f6559e30862f33be2ee323c763e2fc251bca5de44177d29cf15e2\",\"urls\":[\"bzzr://bacac55aed34ace5358b0c89d0fdcd424e3b2d67e2deb51e238b54bd4903317f\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x0c893dbe908c97ea884549fa3eb364d62986708f35a94158cd4fb4470c845408\",\"urls\":[\"bzzr://a9c69c43ec40892d5c009f0827a89b629beee10ed3462bf34a491d6e12b38ffd\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xe103f90deb39d999b79ad1bfd205b89f30830cb0250046ab89a0108268ec6cdb\",\"urls\":[\"bzzr://5a2bb33e78674cbf0eba366b61486e20af9446a94620781bebc8ed2737296375\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x94b168e6c4f125ea32427f097dce92e52e9c8b66128ee95a0399f14f9cfdea2b\",\"urls\":[\"bzzr://596f3a80668e3b110b78d42f1964d6f12827dd730aafd947c457299f334b10b7\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0x68f4e80375f06f0c93148708293cf15b748d7ec74105539a344cdd01b8c64d96\",\"urls\":[\"bzzr://a00ba252d72208237bcebcfe34e962c1931e5eb674bd924fe120d3b14e61049d\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0x188b149d129830814fac640678295376012741a9303e9c59a816d873f9f5f151\",\"urls\":[\"bzzr://dea98da5963fcb2636140cb3bf2e5d6045c491c81e32600b256188a0cbd086ee\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x44fd7c58fc1323f8481f160f2fd4c34b1653d0cc5def45c2381898d32bcc023e\",\"urls\":[\"bzzr://b7c59c72ede9ca492a5606cbbfaa4ba84e9869d9bdcdac2183655baae8b64026\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x80b8851ecb70ec4c3af36d5cab5dabccfcef948c874c2768c837e068b1025481\",\"urls\":[\"bzzr://28fba0566c110396f91ac6f1441478d919bc9f7d0f6cb50fb2b69573b0db598b\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x08e4f6bf25a8df438877bb717a76cfba7e2ee8650f5fdf114fa50b8106a2c11d\",\"urls\":[\"bzzr://121d1cbfc9499103ae11a781ce03056411162fcd13880ee865cdae329fedc67b\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c8063715018a611610130578063abceeba2116100b8578063e306f7791161007c578063e306f779146108e0578063e614d0d6146108e8578063e985e9c5146108f0578063f2fde38b1461091e578063fc0c546a1461094457610232565b8063abceeba2146107a2578063acd06cb3146107aa578063b789543c146107c7578063b88d4fde146107ff578063c87b56dd146108c357610232565b806395d89b41116100ff57806395d89b4114610718578063983b2d56146107205780639865027514610746578063a22cb4651461074e578063aa271e1a1461077c57610232565b8063715018a61461065557806377d32e941461065d5780638da5cb5b146107085780638f32d59b1461071057610232565b80632f745c59116101be57806350bb4e7f1161018257806350bb4e7f1461054957806360f96a8f146106025780636352211e1461060a5780637019d41a1461062757806370a082311461062f57610232565b80632f745c591461047257806340c10f191461049e57806342842e0e146104ca57806347e7ef24146105005780634f6ccce71461052c57610232565b80631499c592116102055780631499c5921461035657806318160ddd1461037c57806319d27d9c1461039657806323b872dd1461041f5780632e1a7d4d1461045557610232565b806301ffc9a71461023757806306fdde0314610272578063081812fc146102ef578063095ea7b314610328575b600080fd5b61025e6004803603602081101561024d57600080fd5b50356001600160e01b03191661094c565b604080519115158252519081900360200190f35b61027a61096b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b457818101518382015260200161029c565b50505050905090810190601f1680156102e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61030c6004803603602081101561030557600080fd5b5035610a02565b604080516001600160a01b039092168252519081900360200190f35b6103546004803603604081101561033e57600080fd5b506001600160a01b038135169060200135610a32565b005b6103546004803603602081101561036c57600080fd5b50356001600160a01b0316610adf565b610384610b2b565b60408051918252519081900360200190f35b61030c600480360360a08110156103ac57600080fd5b810190602081018135600160201b8111156103c657600080fd5b8201836020820111156103d857600080fd5b803590602001918460018302840111600160201b831117156103f957600080fd5b9193509150803590602081013590604081013590606001356001600160a01b0316610b31565b6103546004803603606081101561043557600080fd5b506001600160a01b03813581169160208101359091169060400135610cec565b6103546004803603602081101561046b57600080fd5b5035610da8565b6103846004803603604081101561048857600080fd5b506001600160a01b038135169060200135610e15565b61025e600480360360408110156104b457600080fd5b506001600160a01b038135169060200135610e63565b610354600480360360608110156104e057600080fd5b506001600160a01b03813581169160208101359091169060400135610e8a565b6103546004803603604081101561051657600080fd5b506001600160a01b038135169060200135610ea5565b6103846004803603602081101561054257600080fd5b5035610f1c565b61025e6004803603606081101561055f57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561058e57600080fd5b8201836020820111156105a057600080fd5b803590602001918460018302840111600160201b831117156105c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f50945050505050565b61030c610f82565b61030c6004803603602081101561062057600080fd5b5035610f91565b61030c610fb3565b6103846004803603602081101561064557600080fd5b50356001600160a01b0316610fc2565b610354610ff8565b61030c6004803603604081101561067357600080fd5b81359190810190604081016020820135600160201b81111561069457600080fd5b8201836020820111156106a657600080fd5b803590602001918460018302840111600160201b831117156106c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611053945050505050565b61030c611184565b61025e611193565b61027a6111a4565b6103546004803603602081101561073657600080fd5b50356001600160a01b0316611205565b610354611223565b6103546004803603604081101561076457600080fd5b506001600160a01b038135169060200135151561122e565b61025e6004803603602081101561079257600080fd5b50356001600160a01b03166112b2565b6103846112c5565b61025e600480360360208110156107c057600080fd5b503561134e565b610384600480360360808110156107dd57600080fd5b506001600160a01b038135169060208101359060408101359060600135611363565b6103546004803603608081101561081557600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561084f57600080fd5b82018360208201111561086157600080fd5b803590602001918460018302840111600160201b8311171561088257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611382945050505050565b61027a600480360360208110156108d957600080fd5b50356113a8565b61038461145b565b610384611461565b61025e6004803603604081101561090657600080fd5b506001600160a01b03813581169160200135166114ab565b6103546004803603602081101561093457600080fd5b50356001600160a01b03166114d9565b61030c6114f3565b6001600160e01b03191660009081526006602052604090205460ff1690565b600f8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109f75780601f106109cc576101008083540402835291602001916109f7565b820191906000526020600020905b8154815290600101906020018083116109da57829003601f168201915b505050505090505b90565b6000610a0d82611502565b610a1657600080fd5b506000908152600860205260409020546001600160a01b031690565b6000610a3d82610f91565b9050806001600160a01b0316836001600160a01b03161415610a5e57600080fd5b336001600160a01b0382161480610a7a5750610a7a81336114ab565b610a8357600080fd5b60008281526008602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6003546001600160a01b03163314610af657600080fd5b6001600160a01b038116610b0957600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600d5490565b6000821580610b405750824311155b610b945760408051600160e51b62461bcd02815260206004820152601460248201527f5369676e61747572652069732065787069726564000000000000000000000000604482015290519081900360640190fd5b6000610ba233878787611363565b60008181526004602052604090205490915060ff1615610c0c5760408051600160e51b62461bcd02815260206004820152600f60248201527f5369672064656163746976617465640000000000000000000000000000000000604482015290519081900360640190fd5b6000818152600460209081526040808320805460ff191660011790558051601f8b01839004830281018301909152898152610c64918491908c908c908190840183828082843760009201919091525061105392505050565b9050610c7181858961151f565b610c8c81858960405180602001604052806000815250611578565b610ce05760408051600160e51b62461bcd02815260206004820152601d60248201527f5f636865636b4f6e4552433732315265636569766564206661696c6564000000604482015290519081900360640190fd5b98975050505050505050565b6002546001600160a01b031615801590610d8e575060025460408051600160e01b631ffb811f0281523360048201526001600160a01b0385811660248301526044820185905291519190921691631ffb811f9160648083019260209291908290030181600087803b158015610d6057600080fd5b505af1158015610d74573d6000803e3d6000fd5b505050506040513d6020811015610d8a57600080fd5b5051155b15610d9857610da3565b610da383838361151f565b505050565b33610db282610f91565b6001600160a01b031614610dc557600080fd5b610dcf33826116b2565b60015460408051838152905133926001600160a01b0316917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb919081900360200190a350565b6000610e2083610fc2565b8210610e2b57600080fd5b6001600160a01b0383166000908152600b60205260409020805483908110610e4f57fe5b906000526020600020015490505b92915050565b6000610e6e336112b2565b610e7757600080fd5b610e8183836116fe565b50600192915050565b610da383838360405180602001604052806000815250611382565b610ead611193565b610eb657600080fd5b6001600160a01b038216610ec957600080fd5b610ed382826116fe565b6001546040805183815290516001600160a01b038086169316917f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62919081900360200190a35050565b6000610f26610b2b565b8210610f3157600080fd5b600d8281548110610f3e57fe5b90600052602060002001549050919050565b6000610f5b336112b2565b610f6457600080fd5b610f6e84846116fe565b610f78838361171b565b5060019392505050565b6002546001600160a01b031681565b6000818152600760205260408120546001600160a01b031680610e5d57600080fd5b6003546001600160a01b031681565b60006001600160a01b038216610fd757600080fd5b6001600160a01b0382166000908152600960205260409020610e5d9061174c565b611000611193565b61100957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600080600080845160411461106e5760009350505050610e5d565b50505060208201516040830151604184015160ff16601b81101561109057601b015b8060ff16601b141580156110a857508060ff16601c14155b156110b95760009350505050610e5d565b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015611110573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b03841661117b5760408051600160e51b62461bcd02815260206004820152601260248201527f4572726f7220696e2065637265636f7665720000000000000000000000000000604482015290519081900360640190fd5b50505092915050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109f75780601f106109cc576101008083540402835291602001916109f7565b61120e336112b2565b61121757600080fd5b61122081611750565b50565b61122c33611798565b565b6001600160a01b03821633141561124457600080fd5b336000818152600a602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610e5d60128363ffffffff6117e016565b6040518060800160405280605b8152602001611fef605b91396040516020018082805190602001908083835b602083106113105780518252601f1990920191602091820191016112f1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012081565b60046020526000908152604090205460ff1681565b600061137961137486868686611815565b6118ce565b95945050505050565b61138d848484610cec565b61139984848484611578565b6113a257600080fd5b50505050565b60606113b382611502565b6113bc57600080fd5b60008281526011602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561144f5780601f106114245761010080835404028352916020019161144f565b820191906000526020600020905b81548152906001019060200180831161143257829003601f168201915b50505050509050919050565b60055481565b60405180608001604052806049815260200161204a60499139604051602001808280519060200190808383602083106113105780518252601f1990920191602091820191016112f1565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205460ff1690565b6114e1611193565b6114ea57600080fd5b611220816118f6565b6001546001600160a01b031681565b6000908152600760205260409020546001600160a01b0316151590565b61152a838383611964565b6001546040805183815290516001600160a01b0380861693878216939116917f6eabe333476233fd382224f233210cb808a7bc4c4de64f9d76628bf63c677b1a9181900360200190a4505050565b600061158c846001600160a01b0316611983565b611598575060016116aa565b604051600160e11b630a85bd0102815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b838110156116155781810151838201526020016115fd565b50505050905090810190601f1680156116425780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561166457600080fd5b505af1158015611678573d6000803e3d6000fd5b505050506040513d602081101561168e57600080fd5b50516001600160e01b031916600160e11b630a85bd0102149150505b949350505050565b6116bc8282611989565b60008181526011602052604090205460026000196101006001841615020190911604156116fa5760008181526011602052604081206116fa91611ef2565b5050565b61170882826119b5565b6117128282611a56565b6116fa81611a94565b61172482611502565b61172d57600080fd5b60008281526011602090815260409091208251610da392840190611f36565b5490565b61176160128263ffffffff611ad816565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6117a960128263ffffffff611b2416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166117f557600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000806040518060800160405280605b8152602001611fef605b91396040516020018082805190602001908083835b602083106118635780518252601f199092019160209182019101611844565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f1901835280855282519282019290922082526001600160a01b039b909b169a81019a909a5250880196909652505050606084019190915260808301525060a0902090565b600554604051600160f01b611901028152600281019190915260228101919091526042902090565b6001600160a01b03811661190957600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b61196f838383611b6c565b6119798382611c4c565b610da38282611a56565b3b151590565b6119938282611d41565b61199d8282611c4c565b6000818152600c60205260408120556116fa81611de6565b6001600160a01b0382166119c857600080fd5b6119d181611502565b156119db57600080fd5b600081815260076020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260099091529020611a1a90611e82565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b039091166000908152600b602081815260408084208054868652600c84529185208290559282526001810183559183529091200155565b600d80546000838152600e60205260408120829055600182018355919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50155565b6001600160a01b038116611aeb57600080fd5b611af582826117e0565b15611aff57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116611b3757600080fd5b611b4182826117e0565b611b4a57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b826001600160a01b0316611b7f82610f91565b6001600160a01b031614611b9257600080fd5b6001600160a01b038216611ba557600080fd5b611bae81611e8b565b6001600160a01b0383166000908152600960205260409020611bcf90611ec6565b6001600160a01b0382166000908152600960205260409020611bf090611e82565b60008181526007602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600b6020526040812054611c7690600163ffffffff611edd16565b6000838152600c6020526040902054909150808214611d11576001600160a01b0384166000908152600b60205260408120805484908110611cb357fe5b9060005260206000200154905080600b6000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110611cf157fe5b6000918252602080832090910192909255918252600c9052604090208190555b6001600160a01b0384166000908152600b60205260409020805490611d3a906000198301611fb4565b5050505050565b816001600160a01b0316611d5482610f91565b6001600160a01b031614611d6757600080fd5b611d7081611e8b565b6001600160a01b0382166000908152600960205260409020611d9190611ec6565b60008181526007602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600d54600090611dfd90600163ffffffff611edd16565b6000838152600e6020526040812054600d8054939450909284908110611e1f57fe5b9060005260206000200154905080600d8381548110611e3a57fe5b6000918252602080832090910192909255828152600e90915260409020829055600d805490611e6d906000198301611fb4565b505050600091825250600e6020526040812055565b80546001019055565b6000818152600860205260409020546001600160a01b03161561122057600090815260086020526040902080546001600160a01b0319169055565b8054611ed990600163ffffffff611edd16565b9055565b600082821115611eec57600080fd5b50900390565b50805460018160011615610100020316600290046000825580601f10611f185750611220565b601f0160209004906000526020600020908101906112209190611fd4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f7757805160ff1916838001178555611fa4565b82800160010185558215611fa4579182015b82811115611fa4578251825591602001919060010190611f89565b50611fb0929150611fd4565b5090565b815481835581811115610da357600083815260209020610da39181019083015b6109ff91905b80821115611fb05760008155600101611fda56fe546f6b656e5472616e736665724f726465722861646472657373207370656e6465722c75696e7432353620746f6b656e49644f72416d6f756e742c6279746573333220646174612c75696e743235362065787069726174696f6e29454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320636f6e747261637429a165627a7a723058200319825db8c28d22246fd62785951215642550fdf12d56020347c2ba503c77240029",
  "sourceMap": "287:198:4:-;;;375:108;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:108:4;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;375:108:4;614:243:3;;;;;;;;;;;;375:108:4;614:243:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;515:19:69;;-1:-1:-1;;;;;;515:19:69;423:10:4;515:19:69;;;;;;549:40;;423:10:4;;375:108;;614:243:3;;;;;;;;;;-1:-1:-1;;;;;582:6:69;;;;;549:40;;-1:-1:-1;;549:40:69;260:20:8;;;;;;;;;;;;;;;;;243:38;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;243:38:8;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;243:38:8;;;233:49;;;;;;;;;632:18;;;;;;;;;;;;;;;;676:21;;;;;;;274:1:-1;676:21:8;;;;;;;565:190;;;;;;;;;616:36;565:190;;;;660:39;565:190;;;;458:5;565:190;;;;744:4;565:190;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;565:190:8;;;;;;;555:201;;;;;;534:18;:222;-1:-1:-1;639:40:65;;-1:-1:-1;658:20:65;;-1:-1:-1;639:18:65;;;:40;;:::i;:::-;1970::74;1227:10;1989:20;;1970:18;;;:40;;:::i;:::-;1227:51:75;833:10;1246:31;;1227:18;;;:51;;:::i;:::-;737:12:77;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;759:16:77;;;;:7;;:16;;;;;:::i;:::-;;863:49;428:10;882:29;;863:18;;;:49;;:::i;:::-;-1:-1:-1;;;;;;;;;757:22:3;;;;;;:48;;-1:-1:-1;;;;;;783:22:3;;;;757:48;749:57;;;;;;-1:-1:-1;;812:11:3;:20;;-1:-1:-1;;;;;812:20:3;;;-1:-1:-1;;;;;;812:20:3;;;;;;;;838:14;;;;;;;;;;;275:22:63;286:10;275;;;;;:22;;:::i;:::-;375:108:4;287:198;;989:158:65;1064:25;;;;;;1056:34;;;;;;1100:33;;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1100:40:65;1136:4;1100:40;;;989:158::o;685:119:63:-;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:63;;;;;;;;685:119;:::o;259:181:62:-;-1:-1:-1;;;;;335:21:62;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:62;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:62;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:62;;874:30;;;;;;-1:-1:-1;;;;;;921:20:62;:11;:20;;;;;;;;;;;;;;;786:162::o;287:198:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;287:198:4;;;-1:-1:-1;287:198:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "287:198:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;287:198:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:133:65;-1:-1:-1;;;;;;777:133:65;;:::i;:::-;;;;;;;;;;;;;;;;;;1023:83:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1023:83:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:151:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:151:74;;:::i;:::-;;;;-1:-1:-1;;;;;3773:151:74;;;;;;;;;;;;;;3196:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3196:292:74;;;;;;;;:::i;:::-;;861:122:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;861:122:3;-1:-1:-1;;;;;861:122:3;;:::i;1992:94:75:-;;;:::i;:::-;;;;;;;;;;;;;;;;1887:700:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1887:700:3;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1887:700:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1887:700:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1887:700:3;;-1:-1:-1;1887:700:3;-1:-1:-1;1887:700:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1887:700:3;;:::i;1649:234::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1649:234:3;;;;;;;;;;;;;;;;;:::i;1391:171::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1391:171:3;;:::i;1658:182:75:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1658:182:75;;;;;;;;:::i;442:132:79:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;442:132:79;;;;;;;;:::i;6142::74:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6142:132:74;;;;;;;;;;;;;;;;;:::i;1118:171:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1118:171:3;;;;;;;;:::i;2423:148:75:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2423:148:75;;:::i;555:209:78:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;555:209:78;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;555:209:78;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;555:209:78;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;555:209:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;555:209:78;;-1:-1:-1;555:209:78;;-1:-1:-1;;;;;555:209:78:i;295:21:5:-;;;:::i;2598:177:74:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2598:177:74;;:::i;320:26:5:-;;;:::i;2220:160:74:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2220:160:74;-1:-1:-1;;;;;2220:160:74;;:::i;1423:137:69:-;;;:::i;649:677:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;649:677:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;649:677:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;649:677:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;649:677:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;649:677:5;;-1:-1:-1;649:677:5;;-1:-1:-1;;;;;649:677:5:i;659:77:69:-;;;:::i;979:90::-;;;:::i;1214:87:77:-;;;:::i;508:90:63:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:63;-1:-1:-1;;;;;508:90:63;;:::i;604:75::-;;;:::i;4216:213:74:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4216:213:74;;;;;;;;;;:::i;395:107:63:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:63;-1:-1:-1;;;;;395:107:63;;:::i;288:129:10:-;;;:::i;351:46:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;351:46:5;;:::i;549:273:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;549:273:10;;;;;;;;;;;;;;;;;;:::i;6979:211:74:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6979:211:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6979:211:74;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6979:211:74;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6979:211:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6979:211:74;;-1:-1:-1;6979:211:74;;-1:-1:-1;;;;;6979:211:74:i;1500:151:77:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1500:151:77;;:::i;468:33:8:-;;;:::i;181:101::-;;;:::i;4750:145:74:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4750:145:74;;;;;;;;;;:::i;1731:107:69:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:69;-1:-1:-1;;;;;1731:107:69;;:::i;271:20:5:-;;;:::i;777:133:65:-;-1:-1:-1;;;;;;870:33:65;847:4;870:33;;;:20;:33;;;;;;;;;777:133::o;1023:83:77:-;1094:5;1087:12;;;;;;;;-1:-1:-1;;1087:12:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:13;;1087:12;;1094:5;;1087:12;;1094:5;1087:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:83;;:::o;3773:151:74:-;3832:7;3859:16;3867:7;3859;:16::i;:::-;3851:25;;;;;;-1:-1:-1;3893:24:74;;;;:15;:24;;;;;;-1:-1:-1;;;;;3893:24:74;;3773:151::o;3196:292::-;3259:13;3275:16;3283:7;3275;:16::i;:::-;3259:32;;3315:5;-1:-1:-1;;;;;3309:11:74;:2;-1:-1:-1;;;;;3309:11:74;;;3301:20;;;;;;3339:10;-1:-1:-1;;;;;3339:19:74;;;;:58;;;3362:35;3379:5;3386:10;3362:16;:35::i;:::-;3331:67;;;;;;3409:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3409:29:74;-1:-1:-1;;;;;3409:29:74;;;;;;;;;3453:28;;3409:24;;3453:28;;;;;;;3196:292;;;:::o;861:122:3:-;455:11:5;;-1:-1:-1;;;;;455:11:5;441:10;:25;433:34;;;;;;-1:-1:-1;;;;;932:23:3;;924:32;;;;;;962:6;:16;;-1:-1:-1;;;;;;962:16:3;-1:-1:-1;;;;;962:16:3;;;;;;;;;;861:122::o;1992:94:75:-;2062:10;:17;1992:94;:::o;1887:700:3:-;2013:7;2036:15;;;:45;;;2071:10;2055:12;:26;;2036:45;2028:78;;;;;-1:-1:-1;;;;;2028:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2113:16;2132:94;2165:10;2183:7;2198:4;2210:10;2132:25;:94::i;:::-;2240:24;;;;:14;:24;;;;;;2113:113;;-1:-1:-1;2240:24:3;;:33;2232:61;;;;;-1:-1:-1;;;;;2232:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2299:24;;;;:14;:24;;;;;;;;:31;;-1:-1:-1;;2299:31:3;2326:4;2299:31;;;2391:25;;;;;;;;;;;;;;;;;;;;;;2314:8;;2391:25;2412:3;;;;;;2391:25;;2412:3;;;;2391:25;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2391:10:3;;-1:-1:-1;;;2391:25:3:i;:::-;2376:40;;2422:32;2436:4;2442:2;2446:7;2422:13;:32::i;:::-;2475:45;2498:4;2504:2;2508:7;2475:45;;;;;;;;;;;;:22;:45::i;:::-;2460:105;;;;;-1:-1:-1;;;;;2460:105:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2578:4;1887:700;-1:-1:-1;;;;;;;;1887:700:3:o;1649:234::-;1731:6;;-1:-1:-1;;;;;1731:6:3;:22;;;;:87;;-1:-1:-1;1771:6:3;;1758:60;;;-1:-1:-1;;;;;1758:60:3;;1794:10;1758:60;;;;-1:-1:-1;;;;;1758:60:3;;;;;;;;;;;;;;;1771:6;;;;;1758:35;;:60;;;;;;;;;;;;;;1771:6;;1758:60;;;5:2:-1;;;;30:1;27;20:12;5:2;1758:60:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1758:60:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1758:60:3;1757:61;1731:87;1727:114;;;1828:7;;1727:114;1846:32;1860:4;1866:2;1870:7;1846:13;:32::i;:::-;1649:234;;;:::o;1391:171::-;1467:10;1447:16;1455:7;1447;:16::i;:::-;-1:-1:-1;;;;;1447:30:3;;1439:39;;;;;;1484:26;1490:10;1502:7;1484:5;:26::i;:::-;1530:5;;1521:36;;;;;;;;1537:10;;-1:-1:-1;;;;;1530:5:3;;1521:36;;;;;;;;;;1391:171;:::o;1658:182:75:-;1738:7;1773:16;1783:5;1773:9;:16::i;:::-;1765:5;:24;1757:33;;;;;;-1:-1:-1;;;;;1807:19:75;;;;;;:12;:19;;;;;:26;;1827:5;;1807:26;;;;;;;;;;;;;;1800:33;;1658:182;;;;;:::o;442:132:79:-;512:4;350:20:63;359:10;350:8;:20::i;:::-;342:29;;;;;;528:18:79;534:2;538:7;528:5;:18::i;:::-;-1:-1:-1;563:4:79;442:132;;;;:::o;6142::74:-;6228:39;6245:4;6251:2;6255:7;6228:39;;;;;;;;;;;;:16;:39::i;1118:171:3:-;863:9:69;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;1197:20:3;;1189:29;;;;;;1224:20;1230:4;1236:7;1224:5;:20::i;:::-;1263:5;;1255:29;;;;;;;;-1:-1:-1;;;;;1255:29:3;;;;1263:5;;1255:29;;;;;;;;;;1118:171;;:::o;2423:148:75:-;2481:7;2516:13;:11;:13::i;:::-;2508:5;:21;2500:30;;;;;;2547:10;2558:5;2547:17;;;;;;;;;;;;;;;;2540:24;;2423:148;;;:::o;555:209:78:-;661:4;350:20:63;359:10;350:8;:20::i;:::-;342:29;;;;;;677:18:78;683:2;687:7;677:5;:18::i;:::-;705:31;718:7;727:8;705:12;:31::i;:::-;-1:-1:-1;753:4:78;555:209;;;;;:::o;295:21:5:-;;;-1:-1:-1;;;;;295:21:5;;:::o;2598:177:74:-;2653:7;2688:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2688:20:74;2726:19;2718:28;;;;;320:26:5;;;-1:-1:-1;;;;;320:26:5;;:::o;2220:160:74:-;2275:7;-1:-1:-1;;;;;2302:19:74;;2294:28;;;;;;-1:-1:-1;;;;;2339:24:74;;;;;;:17;:24;;;;;:34;;:32;:34::i;1423:137:69:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:69;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;;;;;1534:19:69;;;1423:137::o;649:677:5:-;734:14;756:9;771;786:7;803:3;:10;817:2;803:16;799:56;;844:3;829:19;;;;;;;799:56;-1:-1:-1;;;897:2:5;888:12;;882:19;928:2;919:12;;913:19;963:2;954:12;;948:19;969:3;944:29;1051:2;1047:6;;1043:34;;;1068:2;1063:7;1043:34;1086:1;:7;;1091:2;1086:7;;:18;;;;;1097:1;:7;;1102:2;1097:7;;1086:18;1082:58;;;1129:3;1114:19;;;;;;;1082:58;1199:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1199:24:5;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;1199:24:5;;-1:-1:-1;;1199:24:5;;;-1:-1:-1;;;;;;;1276:22:5;;1268:53;;;;;-1:-1:-1;;;;;1268:53:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:677;;;;;;;:::o;659:77:69:-;697:7;723:6;-1:-1:-1;;;;;723:6:69;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:69;1042:10;:20;;979:90::o;1214:87:77:-;1287:7;1280:14;;;;;;;;-1:-1:-1;;1280:14:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:13;;1280:14;;1287:7;;1280:14;;1287:7;1280:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:63;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;4216:213:74:-;-1:-1:-1;;;;;4295:16:74;;4301:10;4295:16;;4287:25;;;;;;4341:10;4322:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4322:34:74;;;;;;;;;;;;:45;;-1:-1:-1;;4322:45:74;;;;;;;;;;4382:40;;;;;;;4322:34;;4341:10;4382:40;;;;;;;;;;;4216:213;;:::o;395:107:63:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;288:129:10:-;381:34;;;;;;;;;;;;;;;;;364:52;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;364:52:10;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;364:52:10;;;354:63;;;;;;288:129;:::o;351:46:5:-;;;;;;;;;;;;;;;:::o;549:273:10:-;693:17;732:85;750:66;773:7;782:15;799:4;805:10;750:22;:66::i;:::-;732:17;:85::i;:::-;720:97;549:273;-1:-1:-1;;;;;549:273:10:o;6979:211:74:-;7085:31;7098:4;7104:2;7108:7;7085:12;:31::i;:::-;7134:48;7157:4;7163:2;7167:7;7176:5;7134:22;:48::i;:::-;7126:57;;;;;;6979:211;;;;:::o;1500:151:77:-;1558:13;1591:16;1599:7;1591;:16::i;:::-;1583:25;;;;;;1625:19;;;;:10;:19;;;;;;;;;1618:26;;;;;;-1:-1:-1;;1618:26:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:19;;1618:26;;1625:19;1618:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:151;;;:::o;468:33:8:-;;;;:::o;181:101::-;260:20;;;;;;;;;;;;;;;;;243:38;;;;;;;;;;;;;;;66:2:-1;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;4750:145:74;-1:-1:-1;;;;;4853:25:74;;;4830:4;4853:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4750:145::o;1731:107:69:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;271:20:5:-;;;-1:-1:-1;;;;;271:20:5;;:::o;7384:152:74:-;7441:4;7473:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7473:20:74;7510:19;;;7384:152::o;2591:202:3:-;2672:38;2692:4;2698:2;2702:7;2672:19;:38::i;:::-;2740:5;;2721:67;;;;;;;;-1:-1:-1;;;;;2721:67:3;;;;;;;;2740:5;;;2721:67;;;;;;;;;2591:202;;;:::o;10734:347:74:-;10855:4;10880:15;:2;-1:-1:-1;;;;;10880:13:74;;:15::i;:::-;10875:58;;-1:-1:-1;10918:4:74;10911:11;;10875:58;10959:70;;-1:-1:-1;;;;;10959:70:74;;10996:10;10959:70;;;;;;-1:-1:-1;;;;;10959:70:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:13;;10959:36;;;;;;10996:10;;11008:4;;11014:7;;11023:5;;10959:70;;;;;;;;;;;10943:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10959:70:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10959:70:74;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10959:70:74;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10959:70:74;-1:-1:-1;;;;;;11047:26:74;-1:-1:-1;;;;;11047:26:74;;-1:-1:-1;;10734:347:74;;;;;;;:::o;2322:240:77:-;2388:27;2400:5;2407:7;2388:11;:27::i;:::-;2471:19;;;;:10;:19;;;;;2465:33;;-1:-1:-1;;2465:33:77;;;;;;;;;;;:38;2461:95;;2526:19;;;;:10;:19;;;;;2519:26;;;:::i;:::-;2322:240;;:::o;3440:196:75:-;3503:24;3515:2;3519:7;3503:11;:24::i;:::-;3538:40;3566:2;3570:7;3538:27;:40::i;:::-;3589;3621:7;3589:31;:40::i;1888:144:77:-;1973:16;1981:7;1973;:16::i;:::-;1965:25;;;;;;2000:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;1062:112:64:-;1153:14;;1062:112::o;685:119:63:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:63;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:63;;;;;;;;810:127;:::o;786:162:62:-;858:4;-1:-1:-1;;;;;882:21:62;;874:30;;;;;;-1:-1:-1;;;;;;921:20:62;:11;:20;;;;;;;;;;;;;;;786:162::o;826:1119:10:-;969:14;993:18;381:34;;;;;;;;;;;;;;;;;364:52;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;364:52:10;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;364:52:10;;;354:63;;;;;;;;;1338:26;;-1:-1:-1;;;;;1469:56:10;;;;1452:15;;;1445:81;;;;-1:-1:-1;1552:15:10;;1545:40;;;;-1:-1:-1;;;1672:2:10;1660:15;;1653:29;;;;1777:3;1765:16;;1758:36;-1:-1:-1;1912:3:10;1894:22;;;826:1119::o;765:780:8:-;878:18;;1132:2;1126:9;-1:-1:-1;;;;;1143:82:8;;1269:1;1257:14;;1250:34;;;;1373:2;1361:15;;1354:35;;;;1513:2;1495:21;;;765:780::o;1982:183:69:-;-1:-1:-1;;;;;2055:22:69;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:69;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;;;;;2141:17:69;-1:-1:-1;;;;;2141:17:69;;;;;;;;;;1982:183::o;2946:239:75:-;3031:38;3051:4;3057:2;3061:7;3031:19;:38::i;:::-;3080:47;3113:4;3119:7;3080:32;:47::i;:::-;3138:40;3166:2;3170:7;3138:27;:40::i;463:616:84:-;1026:20;1064:8;;;463:616::o;3908:364:75:-;3974:27;3986:5;3993:7;3974:11;:27::i;:::-;4012:48;4045:5;4052:7;4012:32;:48::i;:::-;4208:1;4179:26;;;:17;:26;;;;;:30;4220:45;4197:7;4220:36;:45::i;8385:259:74:-;-1:-1:-1;;;;;8456:16:74;;8448:25;;;;;;8492:16;8500:7;8492;:16::i;:::-;8491:17;8483:26;;;;;;8520:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8520:25:74;-1:-1:-1;;;;;8520:25:74;;;;;;;;8555:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;8604;;8629:7;;-1:-1:-1;;;;;8604:33:74;;;8621:1;;8604:33;;8621:1;;8604:33;8385:259;;:::o;4894:183:75:-;-1:-1:-1;;;;;5007:16:75;;;;;;;:12;:16;;;;;;;;:23;;4978:26;;;:17;:26;;;;;:52;;;5040:16;;;39:1:-1;23:18;;45:23;;5040:30:75;;;;;;;;4894:183::o;5272:161::-;5375:10;:17;;5348:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5402:24:75;;;;;;;5272:161::o;259:181:62:-;-1:-1:-1;;;;;335:21:62;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:62;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:62;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:62;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:62;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:62;;;514:184::o;9844:362:74:-;9957:4;-1:-1:-1;;;;;9937:24:74;:16;9945:7;9937;:16::i;:::-;-1:-1:-1;;;;;9937:24:74;;9929:33;;;;;;-1:-1:-1;;;;;9980:16:74;;9972:25;;;;;;10008:23;10023:7;10008:14;:23::i;:::-;-1:-1:-1;;;;;10042:23:74;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10087:21:74;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10131:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;10131:25:74;-1:-1:-1;;;;;10131:25:74;;;;;;;;;10172:27;;10131:20;;10172:27;;;;;;;9844:362;;;:::o;6048:1128:75:-;-1:-1:-1;;;;;6335:18:75;;6310:22;6335:18;;;:12;:18;;;;;:25;:32;;6365:1;6335:32;:29;:32;:::i;:::-;6377:18;6398:26;;;:17;:26;;;;;;6310:57;;-1:-1:-1;6528:28:75;;;6524:323;;-1:-1:-1;;;;;6594:18:75;;6572:19;6594:18;;;:12;:18;;;;;:34;;6613:14;;6594:34;;;;;;;;;;;;;;6572:56;;6676:11;6643:12;:18;6656:4;-1:-1:-1;;;;;6643:18:75;-1:-1:-1;;;;;6643:18:75;;;;;;;;;;;;6662:10;6643:30;;;;;;;;;;;;;;;;;;;:44;;;;6759:30;;;:17;:30;;;;;:43;;;6524:323;-1:-1:-1;;;;;6933:18:75;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6933:27:75;;;:::i;:::-;;6048:1128;;;;:::o;8917:283:74:-;9011:5;-1:-1:-1;;;;;8991:25:74;:16;8999:7;8991;:16::i;:::-;-1:-1:-1;;;;;8991:25:74;;8983:34;;;;;;9028:23;9043:7;9028:14;:23::i;:::-;-1:-1:-1;;;;;9062:24:74;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;9139:1;9108:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;9108:33:74;;;9157:36;9120:7;;9139:1;-1:-1:-1;;;;;9157:36:74;;;;;9139:1;;9157:36;8917:283;;:::o;7464:1064:75:-;7738:10;:17;7713:22;;7738:24;;7760:1;7738:24;:21;:24;:::i;:::-;7772:18;7793:24;;;:15;:24;;;;;;8161:10;:26;;7713:49;;-1:-1:-1;7793:24:75;;7713:49;;8161:26;;;;;;;;;;;;;;8139:48;;8223:11;8198:10;8209;8198:22;;;;;;;;;;;;;;;;;;;:36;;;;8302:28;;;:15;:28;;;;;;:41;;;8464:10;:19;;;;;-1:-1:-1;;8464:19:75;;;:::i;:::-;-1:-1:-1;;;8520:1:75;8493:24;;;-1:-1:-1;8493:15:75;:24;;;;;:28;7464:1064::o;1180:89:64:-;1243:19;;1261:1;1243:19;;;1180:89::o;11242:171:74:-;11341:1;11305:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11305:24:74;:38;11301:106;;11394:1;11359:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11359:37:74;;;11242:171::o;1275:108:64:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;1211:145:68:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:68;;;1211:145::o;287:198:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;287:198:4;;;-1:-1:-1;287:198:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.2;\n\nimport { ChildERC721 } from \"./ChildERC721.sol\";\nimport { ERC721Mintable } from \"openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol\";\nimport { ERC721MetadataMintable } from \"openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol\";\n\ncontract ChildERC721Mintable is ChildERC721, ERC721Mintable, ERC721MetadataMintable {\n  constructor (address rootToken)\n    ChildERC721(msg.sender, rootToken, \"Mintable 721\", \"M721\")\n    public {}\n}\n",
  "sourcePath": "/Users/arpit/projects/contracts/contracts/child/ChildERC721Mintable.sol",
  "ast": {
    "absolutePath": "/Users/arpit/projects/contracts/contracts/child/ChildERC721Mintable.sol",
    "exportedSymbols": {
      "ChildERC721Mintable": [
        1096
      ]
    },
    "id": 1097,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1070,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/arpit/projects/contracts/contracts/child/ChildERC721.sol",
        "file": "./ChildERC721.sol",
        "id": 1072,
        "nodeType": "ImportDirective",
        "scope": 1097,
        "sourceUnit": 1069,
        "src": "25:48:4",
        "symbolAliases": [
          {
            "foreign": 1071,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 1074,
        "nodeType": "ImportDirective",
        "scope": 1097,
        "sourceUnit": 19163,
        "src": "74:97:4",
        "symbolAliases": [
          {
            "foreign": 1073,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 1076,
        "nodeType": "ImportDirective",
        "scope": 1097,
        "sourceUnit": 19135,
        "src": "172:113:4",
        "symbolAliases": [
          {
            "foreign": 1075,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1077,
              "name": "ChildERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1068,
              "src": "319:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChildERC721_$1068",
                "typeString": "contract ChildERC721"
              }
            },
            "id": 1078,
            "nodeType": "InheritanceSpecifier",
            "src": "319:11:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1079,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19162,
              "src": "332:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$19162",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 1080,
            "nodeType": "InheritanceSpecifier",
            "src": "332:14:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1081,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19134,
              "src": "348:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$19134",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 1082,
            "nodeType": "InheritanceSpecifier",
            "src": "348:22:4"
          }
        ],
        "contractDependencies": [
          1068,
          1214,
          1368,
          1455,
          17112,
          17212,
          17222,
          17528,
          18611,
          18946,
          18970,
          19097,
          19134,
          19162,
          19265,
          19292,
          19315
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1096,
        "linearizedBaseContracts": [
          1096,
          19134,
          19162,
          17112,
          1068,
          18970,
          19097,
          19315,
          18946,
          19292,
          18611,
          19265,
          17212,
          17222,
          1455,
          1368,
          1214,
          17528
        ],
        "name": "ChildERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "481:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 1095,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1087,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20066,
                      "src": "423:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "423:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1089,
                    "name": "rootToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1084,
                    "src": "435:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d696e7461626c6520373231",
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "446:14:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_81390232e9422330d5453605fcc979ac7b48d7af8f2e98ef10a0bbd871f298f5",
                      "typeString": "literal_string \"Mintable 721\""
                    },
                    "value": "Mintable 721"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d373231",
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "462:6:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8131ad8b2a58f9035c63acb54162ab6d60720f50f29671b04519274cf506405c",
                      "typeString": "literal_string \"M721\""
                    },
                    "value": "M721"
                  }
                ],
                "id": 1092,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1086,
                  "name": "ChildERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1068,
                  "src": "411:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ChildERC721_$1068_$",
                    "typeString": "type(contract ChildERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "411:58:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "name": "rootToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "388:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:19:4"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:0:4"
            },
            "scope": 1096,
            "src": "375:108:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1097,
        "src": "287:198:4"
      }
    ],
    "src": "0:486:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/arpit/projects/contracts/contracts/child/ChildERC721Mintable.sol",
    "exportedSymbols": {
      "ChildERC721Mintable": [
        1096
      ]
    },
    "id": 1097,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1070,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/arpit/projects/contracts/contracts/child/ChildERC721.sol",
        "file": "./ChildERC721.sol",
        "id": 1072,
        "nodeType": "ImportDirective",
        "scope": 1097,
        "sourceUnit": 1069,
        "src": "25:48:4",
        "symbolAliases": [
          {
            "foreign": 1071,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 1074,
        "nodeType": "ImportDirective",
        "scope": 1097,
        "sourceUnit": 19163,
        "src": "74:97:4",
        "symbolAliases": [
          {
            "foreign": 1073,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 1076,
        "nodeType": "ImportDirective",
        "scope": 1097,
        "sourceUnit": 19135,
        "src": "172:113:4",
        "symbolAliases": [
          {
            "foreign": 1075,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1077,
              "name": "ChildERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1068,
              "src": "319:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChildERC721_$1068",
                "typeString": "contract ChildERC721"
              }
            },
            "id": 1078,
            "nodeType": "InheritanceSpecifier",
            "src": "319:11:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1079,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19162,
              "src": "332:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$19162",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 1080,
            "nodeType": "InheritanceSpecifier",
            "src": "332:14:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1081,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19134,
              "src": "348:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$19134",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 1082,
            "nodeType": "InheritanceSpecifier",
            "src": "348:22:4"
          }
        ],
        "contractDependencies": [
          1068,
          1214,
          1368,
          1455,
          17112,
          17212,
          17222,
          17528,
          18611,
          18946,
          18970,
          19097,
          19134,
          19162,
          19265,
          19292,
          19315
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1096,
        "linearizedBaseContracts": [
          1096,
          19134,
          19162,
          17112,
          1068,
          18970,
          19097,
          19315,
          18946,
          19292,
          18611,
          19265,
          17212,
          17222,
          1455,
          1368,
          1214,
          17528
        ],
        "name": "ChildERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "481:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 1095,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1087,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20066,
                      "src": "423:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "423:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1089,
                    "name": "rootToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1084,
                    "src": "435:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d696e7461626c6520373231",
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "446:14:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_81390232e9422330d5453605fcc979ac7b48d7af8f2e98ef10a0bbd871f298f5",
                      "typeString": "literal_string \"Mintable 721\""
                    },
                    "value": "Mintable 721"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d373231",
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "462:6:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8131ad8b2a58f9035c63acb54162ab6d60720f50f29671b04519274cf506405c",
                      "typeString": "literal_string \"M721\""
                    },
                    "value": "M721"
                  }
                ],
                "id": 1092,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1086,
                  "name": "ChildERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1068,
                  "src": "411:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ChildERC721_$1068_$",
                    "typeString": "type(contract ChildERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "411:58:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "name": "rootToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "388:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:19:4"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:0:4"
            },
            "scope": 1096,
            "src": "375:108:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1097,
        "src": "287:198:4"
      }
    ],
    "src": "0:486:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.14",
  "updatedAt": "2019-11-13T10:42:44.278Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "deposit(address,uint256)": {
        "params": {
          "tokenId": "tokenId to mint to user's account",
          "user": "address for deposit"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Overriding the inherited method so that it emits LogTransfer"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdraw(uint256)": {
        "params": {
          "tokenId": "tokenId of the token to be withdrawn"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "deposit(address,uint256)": {
        "notice": "Deposit tokens"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "withdraw(uint256)": {
        "notice": "Withdraw tokens"
      }
    }
  }
}